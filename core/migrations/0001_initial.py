# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-26 09:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adminlogin',
            fields=[
                ('admname', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('admpassword', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'adminlogin',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qnid', models.IntegerField()),
                ('question', models.CharField(blank=True, max_length=500, null=True)),
                ('optiona', models.CharField(blank=True, max_length=100, null=True)),
                ('optionb', models.CharField(blank=True, max_length=100, null=True)),
                ('optionc', models.CharField(blank=True, max_length=100, null=True)),
                ('optiond', models.CharField(blank=True, max_length=100, null=True)),
                ('correctanswer', models.CharField(blank=True, max_length=7, null=True)),
                ('marks', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'question',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'school',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('stdid', models.BigAutoField(primary_key=True, serialize=False)),
                ('stdname', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('stdpassword', models.CharField(blank=True, max_length=40, null=True)),
                ('emailid', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('contactno', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=40, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('pincode', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Studentquestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answered', models.CharField(blank=True, max_length=10, null=True)),
                ('stdanswer', models.CharField(blank=True, max_length=7, null=True)),
                ('qnid', models.ForeignKey(db_column='qnid', on_delete=django.db.models.deletion.DO_NOTHING, to='core.Question')),
                ('stdid', models.ForeignKey(db_column='stdid', on_delete=django.db.models.deletion.DO_NOTHING, to='core.Student')),
                ('testid', models.ForeignKey(db_column='testid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='custom_user_profile', to='core.Question')),
            ],
            options={
                'db_table': 'studentquestion',
            },
        ),
        migrations.CreateModel(
            name='Studenttest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starttime', models.DateTimeField()),
                ('endtime', models.DateTimeField()),
                ('correctlyanswered', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('O', 'Over'), ('I', 'Inprogress')], max_length=10, null=True)),
                ('stdid', models.ForeignKey(db_column='stdid', on_delete=django.db.models.deletion.DO_NOTHING, to='core.Student')),
            ],
            options={
                'db_table': 'studenttest',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subid', models.IntegerField(primary_key=True, serialize=False)),
                ('subname', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('subdesc', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'subject',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('testid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('testname', models.CharField(max_length=30, unique=True)),
                ('testdesc', models.CharField(blank=True, max_length=100, null=True)),
                ('testdate', models.DateField(blank=True, null=True)),
                ('testtime', models.TimeField(blank=True, null=True)),
                ('testfrom', models.DateTimeField()),
                ('testto', models.DateTimeField()),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('totalquestions', models.IntegerField(blank=True, null=True)),
                ('attemptedstudents', models.BigIntegerField(blank=True, null=True)),
                ('testcode', models.CharField(max_length=40)),
                ('subid', models.ForeignKey(blank=True, db_column='subid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Subject')),
            ],
            options={
                'db_table': 'test',
            },
        ),
        migrations.CreateModel(
            name='Testconductor',
            fields=[
                ('tcid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('tcname', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('tcpassword', models.CharField(blank=True, max_length=40, null=True)),
                ('emailid', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('contactno', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=40, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('pincode', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'testconductor',
            },
        ),
        migrations.AddField(
            model_name='test',
            name='tcid',
            field=models.ForeignKey(blank=True, db_column='tcid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Testconductor'),
        ),
        migrations.AddField(
            model_name='subject',
            name='tcid',
            field=models.ForeignKey(blank=True, db_column='tcid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Testconductor'),
        ),
        migrations.AddField(
            model_name='studenttest',
            name='testid',
            field=models.ForeignKey(db_column='testid', on_delete=django.db.models.deletion.DO_NOTHING, to='core.Test'),
        ),
        migrations.AddField(
            model_name='question',
            name='testid',
            field=models.ForeignKey(db_column='testid', on_delete=django.db.models.deletion.DO_NOTHING, to='core.Test'),
        ),
        migrations.AlterUniqueTogether(
            name='studenttest',
            unique_together=set([('stdid', 'testid')]),
        ),
        migrations.AlterUniqueTogether(
            name='studentquestion',
            unique_together=set([('stdid', 'testid', 'qnid')]),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together=set([('testid', 'qnid')]),
        ),
    ]
